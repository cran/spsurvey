\documentclass[12pt]{article}
% \VignetteIndexEntry{GRTS survey designs for a finite resource}
\author{Thomas Kincaid}
\title{GRTS Survey Designs for a Finite Resource}
\usepackage[colorlinks=true, urlcolor=blue]{hyperref}
\usepackage{Sweave}
\textwidth=6.5in
\textheight=9.0in
\oddsidemargin=.1in
\evensidemargin=.1in
\headheight=-.5in
\setlength{\parindent}{0in}
\setlength{\parskip}{.1in}

\begin{document}
\maketitle
\tableofcontents
\setkeys{Gin}{width=1.0\textwidth}

\section{Preliminaries}

This document presents example GRTS survey designs for a finite resource.  The finite resource used in the designs is lakes in the southern New England region of the U.S.  Four survey designs will be presented: (1) an unstratified, equal probability design; (2) a stratified, equal probability design; (3) an unstratified, unequal probability design with an oversample; and (4) an unstratified, unequal probability design with an oversample and a panel structure for survey over time.  The sampling frame used for the survey designs is contained in either an ESRI shapefile, a data frame, or an sp package object.  The frame contains the coordinates for a set of points that define the finite resource in addition to attribute data associated with the points.  The coordinate system for the set of points in the sampling frame is an equal area projection rather than latitude and longitude.  An equal area projection is used so that calculation of distance between points is valid.  Use of the three sources for the sampling frame will be illustrated in the example survey designs.

The initial step is to use the library function to load the spsurvey package.  After the package is loaded, a message is printed to the R console indicating that the spsurvey package was loaded successfully.

Load the spsurvey package

<<preliminaries>>=
# Load the spsurvey package
library(spsurvey)

@
\begin{verbatim}
Version 2.5 of the spsurvey package was loaded successfully.
\end{verbatim}

\section{Shapefile attribute data}

The next step is to read the attribute data from the shapefile.  The read.dbf function in the spsurvey package is used to read the attribute (dbf) file in the shapefile and assign it to a data frame named att.  The initial six lines in the att data frame are printed using the head function.

Two attributes, state name and lake area category, that will be used to define, respectively, stratum codes and unequal selection probability (multidensity) categories for the survey designs are examined.  State code is contained in a variable named "state", and lake area category is contained in a variable named "area\_cat".  For lake area category, lakes are classified by surface area measured in hectares.  The lake area categories are coded using values such as "(5,10]", which indicates that lake area is greater than five hectares but less than or equal to ten hectares.  The table and addmargin functions are used to produce a table displaying number of lakes for each combination of values for the strata and multidensity category variables.

Read the attribute table from the shapefile

<<att>>=
# Read the attribute table from the shapefile
att <- read.dbf("NE_lakes")

@
Display the initial six lines in the attribute data frame

<<att>>=
# Display the initial six lines in the attribute data frame
head(att)

@
Display number of lakes cross-classified by strata and multidensity category

<<att>>=
# Display number of lakes cross-classified by strata and multidensity
# category
addmargins(table("State"=att$State, "Lake Area Category"=att$Area_Cat))

@
Lakes in the southern New England region are displayed in Figure~\ref{fig:Finite}.  The plot function is used to produce the figure.
\begin{verbatim}
> plot(att$xcoord, att$ycoord, xlab="x-coordinate", ylab="y-coordinate", pch=20,
+      cex=0.1, col="red")
\end{verbatim}

\begin{figure}
\centering

<<figure, fig=TRUE, echo=FALSE>>=
# Plot lakes in the southern New England region
plot(att$xcoord, att$ycoord, xlab="x-coordinate", ylab="y-coordinate", pch=20,
     cex=0.1, col="red")

@
\caption{Lakes in the Southern New England Region.}
\label{fig:Finite}
\end{figure}

\section{Unstratified, equal probability, GRTS survey design}

The first survey design is an unstratified, equal probability design.  The set.seed function is called so that, if necessary, the designs can be replicated.

The initial step is to create a list named Equaldsgn that contains information for specifying the survey design.  Since the survey design is unstratified, the list contains a single item named "None" that also is a list.  The "None" list includes two items: panel, which is used to specify the sample size for each panel, and seltype, which is used to input the type of random selection for the design.  For this example, panel is assigned a single value named "PanelOne" that is set equal to 300, and seltype is assigned the value "Equal", which indicates equal probability selection.

The grts function in the spsurvey package is called to select the survey design.  The following arguments are included in the call to grts: (1) design: the named list of stratum design specifications, which is assigned the Equaldsgn list; (2) DesignID: name for the design, which is used to create a site ID for each site and is assigned the value "EQUAL"; (3) type.frame: the type of frame, which is assigned the value "finite" to indicate a finite resource; (4) src.frame: source of the frame, which is assigned the value "shapefile" to indicate a shapefile frame; (5) in.shape: name of the input shapefile, which is assigned the value "reg1\_lakes"; (6) att.frame: the data frame of attributes associated with elements in the frame, which is assigned the att data frame; and (7) shapefile: option to create a shapefile containing the survey design information, which is assigned FALSE.

During execution of the grts function, messages are printed that indicate the initial number of hierarchical levels used for the GRTS grid, the current number of levels, and the final number of levels.  The set of messages is printed for each stratum, and is labeled with the stratum name.  For this example, the set of messages is labeled "None", i.e., the name used in the Equaldsgn list.  Upon completion of the call to grts, the initial six sites for the survey design and a design summary are printed.

Call the set.seed function so that the design can be replicated

<<Equalsites>>=
# Call the set.seed function so that the survey designs can be replicate
set.seed(4447864)

@
Create the design list

<<Equalsites>>=
# Create the design list
Equaldsgn <- list(None=list(panel=c(PanelOne=300), seltype="Equal"))

@
Select the sample
\begin{verbatim}
> Equalsites <- grts(design=Equaldsgn,
+                    DesignID="EQUAL",
+                    type.frame="finite",
+                    src.frame="shapefile",
+                    in.shape="NE_lakes", 
+                    att.frame=att,
+                    shapefile=FALSE)
\end{verbatim}

<<Equalsites, echo=FALSE>>=
# Select the sample
Equalsites <- grts(design=Equaldsgn,
                   DesignID="EQUAL",
                   type.frame="finite",
                   src.frame="shapefile",
                   in.shape="NE_lakes", 
                   att.frame=att,
                   shapefile=FALSE)

@
Print the initial six lines of the survey design

<<Equalsites>>=
# Print the initial six lines of the survey design
head(Equalsites@data)

@
Print the survey design summary

<<Equalsites>>=
# Print the survey design summary
dsgnsum(Equalsites)

@
\section{Stratified, equal probability, GRTS survey design}

The second survey design is a stratified, equal probability design.  The state attribute is used to identify strata.  List Stratdsgn is assigned design specifications.  Stratdsgn includes six lists, one for each stratum.  The names for the lists match the levels of the stratum variable, i.e., the unique values of the state attribute.  Each list in Stratdsgn contains two items: panel and seltype.  The value for panel is the same as the equal probability design (50), and seltype is assigned "Equal".

For this survey design, a data frame will be used as the sampling frame.  Since it includes spatial coordinates, the att data frame will be used as the frame.  The following arguments are included in the call to grts: (1) design: assigned the Stratdsgn list; (2) DesignID: assigned the value "STRATIFIED"; (3) type.frame: assigned the value "finite"; (4) src.frame: assigned the value "att.frame" to indicate that the sampling frame is provided by argument att.frame; (5) att.frame: assigned the att data frame; (6) xcoord: name of the column in the attributes data frame that identifies x-coordinates, which is assigned the value "xcoord";  (7) ycoord: name of the column in the attributes data frame that identifies y-coordinates, which is assigned the value "ycoord";  (8) stratum: name of the column in the attributes data frame that identifies the stratum code for each element in the frame, which is assigned the value "state"; and (9) shapefile: assigned the value FALSE.  Upon completion of the call to grts, the initial six sites for the survey design and a design summary are printed.

Create the design list
\begin{verbatim}
> Stratdsgn <- list(CT=list(panel=c(PanelOne=125), seltype="Equal"),
+                   MA=list(panel=c(PanelOne=125), seltype="Equal"),
+                   RI=list(panel=c(PanelOne=50), seltype="Equal"))
\end{verbatim}

<<Stratsites, echo=FALSE>>=
# Create the design list
Stratdsgn <- list(CT=list(panel=c(PanelOne=125), seltype="Equal"),
                  MA=list(panel=c(PanelOne=125), seltype="Equal"),
                  RI=list(panel=c(PanelOne=50), seltype="Equal"))

@
Select the sample
\begin{verbatim}
> Stratsites <- grts(design=Stratdsgn,
+                    DesignID="STRATIFIED",
+                    type.frame="finite",
+                    src.frame="att.frame",
+                    att.frame=att,
+                    xcoord="xcoord",
+                    ycoord="ycoord",
+                    stratum="State",
+                    shapefile=FALSE)
\end{verbatim}

<<Stratsites, echo=FALSE>>=
# Select the sample
Stratsites <- grts(design=Stratdsgn,
                   DesignID="STRATIFIED",
                   type.frame="finite",
                   src.frame="att.frame",
                   att.frame=att,
                   xcoord="xcoord",
                   ycoord="ycoord",
                   stratum="State",
                   shapefile=FALSE)

@
Print the initial six lines of the survey design

<<Stratsites>>=
# Print the initial six lines of the survey design
head(Stratsites@data)

@
Print the survey design summary

<<Stratsites>>=
# Print the survey design summary
dsgnsum(Stratsites)

@
\section{Unstratified, unequal probability, GRTS survey design with an oversample}

The third survey design is an unstratified, unequal probability design with an oversample.  Lake area classes are used to identify multidensity categories.  List Unequaldsgn is assigned design specifications.  Since the survey design is unstratified, Unequaldsgn includes a single list named "None" that contains four items: panel, seltype, caty.n, and over.  The value for panel is the same as the equal probability design, and seltype is assigned "Unequal" to indicate unequal selection probabilities.  The third item, caty.n, assigns sample sizes for each of the six multidensity categories.  Note that the sum of sample sizes provided in caty.n must equal the value in panel.  The fourth item, over, is assigned the value 120, which specifies an oversample of 120 sites.  An oversample is replacement sites for the survey design.  The grts function attempts to distribute the oversample proportionately among sample sizes for the multidensity categories.  If the oversample proportion for one or more categories is not a whole number, a warning message is printed and the proportion is rounded to the next higher integer.  For this example, the oversample is proportionate to the category sample sizes, and the warning message is not printed.

For this survey design, an sp package object will be used as the sampling frame.  The read.shape function will be used to read the shapefile and assign its output to an sp object named shp.  The following arguments are included in the call to grts: (1) design: assigned the Unequaldsgn list; (2) DesignID: assigned the value "UNEQUAL"; (3) type.frame: assigned the value "finite"; (4) src.frame: assigned the value "sp.object" to indicate that the sampling frame is provided by an sp object; (5) sp.object: name of the sp object, which is assigned the shp object; (6) att.frame: assigned the att data frame; (7) mdcaty: name of the column in the attributes data frame that identifies the unequal probability category for each element in the frame, which is assigned the value "area\_cat"; (8) shapefile: assigned the value FALSE.  Upon completion of the call to grts, the initial six sites for the survey design and a design summary are printed.

Create the design list
\begin{verbatim}
> Unequaldsgn <- list(None=list(panel=c(PanelOne=300),
+                               seltype="Unequal",
+                               caty.n=c("(0,1]"=50, "(1,5]"=120, "(5,10]"=50,
+                                        "(10,50]"=50, "(50,500]"=25,
+                                        "(500,1e+04]"=5),
+                               over=120))
\end{verbatim}

<<Unequalsites, echo=FALSE>>=
# Create the design list
Unequaldsgn <- list(None=list(panel=c(PanelOne=300),
                              seltype="Unequal",
                              caty.n=c("(0,1]"=50, "(1,5]"=120, "(5,10]"=50,
                                       "(10,50]"=50, "(50,500]"=25,
                                       "(500,1e+04]"=5),
                              over=120))

@
Read the shapefile

<<Unequalsites>>=
# Read the shapefile
shp <- read.shape("NE_lakes")

@
Select the sample
\begin{verbatim}
> Unequalsites <- grts(design=Unequaldsgn,
+                      DesignID="UNEQUAL",
+                      type.frame="finite",
+                      src.frame="sp.object",
+                      sp.object=shp,
+                      att.frame=att,
+                      mdcaty="Area_Cat",
+                      shapefile=FALSE)
\end{verbatim}

<<Unequalsites, echo=FALSE>>=
# Select the sample
Unequalsites <- grts(design=Unequaldsgn,
                     DesignID="UNEQUAL",
                     type.frame="finite",
                     src.frame="sp.object",
                     sp.object=shp,
                     att.frame=att,
                     mdcaty="Area_Cat",
                     shapefile=FALSE)

@
Print the initial six lines of the survey design

<<Unequalsites>>=
# Print the initial six lines of the survey design
head(Unequalsites@data)

@
Print the survey design summary

<<Unequalsites>>=
# Print the survey design summary
dsgnsum(Unequalsites)

@
\section{Unstratified, unequal probability, GRTS survey design with an oversample and a panel structure for survey over time}

The fourth survey design is an unstratified, unequal probability design with an oversample and a panel structure for survey over time.  List Paneldsgn is assigned design specifications.  Since the survey design is unstratified, Paneldsgn includes a single list named "None" that contains four items: panel, seltype, caty.n, and over.  A vector identifying sample sizes for five panels is assigned to panel.  The value "Unequal" is assigned to seltype, which indicates unequal selection probabilities.  The third item, caty.n, assigns sample sizes for each of six multidensity categories, where lake area classes are used as the categories.  The value 100 is assigned to over, which specifies an oversample of 100 sites.  For this example, the oversample is not proportionate to the category sample sizes, and the warning message is printed by calling the warnings function.

For this survey design, a shapefile will be used as the sampling frame.  The following arguments are included in the call to grts: (1) design: assigned the Paneldsgn list; (2) DesignID: assigned the value "UNEQUAL"; (3) type.frame: assigned the value "finite"; (4) src.frame: assigned the value "shapefile"; (5) in.shape: assigned the value "reg1\_lakes"; (6) att.frame: assigned the att data frame; (7) mdcaty: assigned the value "area\_cat"; and (8) shapefile: assigned the value FALSE.  Upon completion of the call to grts, the initial six sites for the survey design and a design summary are printed.

Create the design list
\begin{verbatim}
> Paneldsgn <- list(None=list(panel=c(Annual=50, Year1=50, Year2=50, Year3=50,
+                                     Year4=50, Year5=50),
+                             seltype="Unequal",
+                             caty.n=c("(0,1]"=50, "(1,5]"=120, "(5,10]"=50,
+                                      "(10,50]"=50, "(50,500]"=25,
+                                      "(500,1e+04]"=5),
+                             over=100))
\end{verbatim}

<<Panelsites, echo=FALSE>>=
# Create the design list
Paneldsgn <- list(None=list(panel=c(Annual=50, Year1=50, Year2=50, Year3=50,
                                    Year4=50, Year5=50),
                            seltype="Unequal",
                            caty.n=c("(0,1]"=50, "(1,5]"=120, "(5,10]"=50,
                                     "(10,50]"=50, "(50,500]"=25,
                                     "(500,1e+04]"=5),
                            over=100))

@
Select the sample
\begin{verbatim}
> Panelsites <- grts(design=Paneldsgn,
+                    DesignID="UNEQUAL",
+                    type.frame="finite",
+                    src.frame="shapefile",
+                    in.shape="NE_lakes",
+                    att.frame=att,
+                    mdcaty="Area_Cat",
+                    shapefile=FALSE)
\end{verbatim}

<<Panelsites, echo=FALSE>>=
# Select the sample
Panelsites <- grts(design=Paneldsgn,
                   DesignID="UNEQUAL",
                   type.frame="finite",
                   src.frame="shapefile",
                   in.shape="NE_lakes",
                   att.frame=att,
                   mdcaty="Area_Cat",
                   shapefile=FALSE)

@
Print the warning message

<<Panelsites, eval=FALSE>>=
# Print the warning message
warnings()

@
\begin{verbatim}
Warning message:
In grts(design = Paneldsgn, DesignID = "UNEQUAL", type.frame = "finite",  :
  
Oversample size is not proportional to category sample sizes for stratum
"None".
\end{verbatim}

Print the initial six lines of the survey design

<<Panelsites>>=
# Print the initial six lines of the survey design
head(Panelsites@data)

@
Print the survey design summary

<<Panelsites>>=
# Print the survey design summary
dsgnsum(Panelsites)

@
\end{document}
