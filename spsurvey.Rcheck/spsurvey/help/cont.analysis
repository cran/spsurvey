cont.analysis            package:spsurvey            R Documentation

_C_o_n_t_i_n_u_o_u_s _D_a_t_a _A_n_a_l_y_s_i_s _f_o_r _P_r_o_b_a_b_i_l_i_t_y _S_u_r_v_e_y _D_a_t_a

_D_e_s_c_r_i_p_t_i_o_n:

     This function organizes input and output for analysis of
     continuous data  generated by a probability survey.  Input can be
     either an object belonging to class psurvey.analysis (see the
     documentation for function psurvey.analysis) or through use of the
     other arguments to this function.

_U_s_a_g_e:

     cont.analysis(sites=NULL, subpop=NULL, design=NULL, data.cont=NULL, sigma=NULL,
        var.sigma=NULL, N.cluster=NULL, popsize=NULL, stage1size=NULL,
        popcorrect=FALSE, sizeweight=FALSE, unitsize=NULL, vartype="Local", conf=95,
        pctval=c(5,10,25,50,75,90,95), psurvey.obj=NULL)

_A_r_g_u_m_e_n_t_s:

   sites: a data frame consisting of two variables: the first variable
          is  site IDs, and the second variable is a logical vector
          indicating which sites to use in the analysis.  If
          psurvey.obj is not provided, then this argument is required. 
          The default is NULL.

  subpop: a data frame describing sets of populations and
          subpopulations  for which estimates will be calculated.  The
          first variable is site   IDs.  Each subsequent variable
          identifies a Type of population, where the variable name is
          used to identify Type.  A Type variable identifies each site
          with one of the subpopulations of that Type.  If psurvey.obj
          is not provided, then this argument is required.  The default
          is NULL.

  design: a data frame consisting of design variables.  If psurvey.obj
          is not provided, then this argument is required.  The default
          is NULL. Variables should be named as follows:
           siteID = site IDs
           wgt = final adjusted weights, which are either the weights
          for a single-stage sample or the stage two weights for a
          two-stage sample
           xcoord = x-coordinates for location, which are either the
          x-coordinates for a single-stage sample or the stage two
          x-coordinates for a two-stage sample
           ycoord = y-coordinates for location, which are either the
          y-coordinates for a single-stage sample or the stage two
          y-coordinates for a two-stage sample
           stratum = the stratum codes
           cluster = the stage one sampling unit (primary sampling unit
          or cluster) codes
           wgt1 = final adjusted stage one weights
           xcoord1 = the stage one x-coordinates for location
           ycoord1 = the stage one y-coordinates for location
           support = support values - the value one (1) for a site from
          a  finite resource or the measure of the sampling unit
          associated  with a site from an extensive resource, which is
          required for  calculation of finite and continuous population
          correction  factors
           swgt = size-weights, which is the stage two size-weight for
          a two- stage sample
           swgt1 = stage one size-weights

data.cont: a data frame of continuous response variables.  The first 
          variable is site IDs.  Subsequent variables are response
          variables. Missing data (NA) is allowed.  If psurvey.obj is
          not provided, then this argument is required.  The default is
          NULL.

   sigma: measurement error variance.  This variable must be a vector
          containing a value for each response variable and must have
          the names attribute set to identify the response variable
          names.  Missing data (NA) is allowed.  The default is NULL.

var.sigma: variance of the measurement error variance.  This variable
          must be a vector containing a value for each response
          variable and must have the names attribute set to identify
          the response variable names.  Missing data (NA) is allowed. 
          The default is NULL.

N.cluster: the number of stage one sampling units in the resource,
          which  is required for calculation of finite and continuous
          population  correction factors for a two-stage sample.  For a
          stratified sample  this variable must be a vector containing
          a value for each stratum and must have the names attribute
          set to identify the stratum codes.  The default is NULL.

 popsize: the known size of the resource - the total number of sampling
           units of a finite resource or the measure of an extensive
          resource, which is used to adjust estimators for the known
          size of a resource. This argument also is required for
          calculation of finite and continuous population correction
          factors for a single-stage sample.    The argument must be in
          the form of a list containing an element for    each
          population Type in the subpop data frame, where NULL is a
          valid    choice for a population Type.  The list must be
          named using the column   names for the population Types in
          subpop. If a population Type doesn't   contain
          subpopulations, then each element of the list is either a  
          single value for an unstratified sample or a vector
          containing a value   for each stratum for a stratified
          sample, where elements of the vector are named using the
          stratum codes.  If a population Type contains 
          subpopulations, then each element of the list is a list
          containing an  element for each subpopulation, where the list
          is named using the  subpopulation names.  The element for
          each subpopulation will be  either a single value for an
          unstratified sample or a named vector of  values for a
          stratified sample.  The default is NULL.

           Example popsize for a stratified sample:
           popsize = list("Pop 1"=c("Stratum 1"=750, "Stratum 2"=500,
          "Stratum 3"=250),
           "Pop2"=list("SubPop 1"=c("Stratum 1"=350, "Stratum 2"=250,
          "Stratum 3"=150),
           "SubPop 2"=c("Stratum 1"=250, "Stratum 2"=150, "Stratum
          3"=100),
           "SubPop 3"=c("Stratum 1"=150, "Stratum 2"=150, "Stratum
          3"=75)),
           "Pop 3"=NULL)

           Example popsize for an unstratified sample:
           popsize = list("Pop 1"=1500, "Pop2"=list("SubPop 1"=750,
          "SubPop 2"=500, "SubPop 3"=375), "Pop 3"=NULL)

stage1size: the known size of the stage one sampling units of a two-
          stage sample, which is required for calculation of finite and
            continuous population correction factors for a two-stage
          sample and  must have the names attribute set to identify the
          stage one sampling  unit codes.  For a stratified sample, the
          names attribute must be set to identify both stratum codes
          and stage one sampling unit codes using a convention where
          the two codes are separated by the & symbol, e.g., "Stratum
          1&Cluster 1".  The default is NULL.

popcorrect: a logical value that indicates whether finite or continuous
           population correction factors should be employed during
          variance  estimation, where TRUE = use the correction factors
          and FALSE = do not  use the correction factors.  The default
          is FALSE.

sizeweight: a logical value that indicates whether size-weights should 
          be used in the analysis, where TRUE = use the size-weights
          and FALSE =  do not use the size-weights.  The default is
          FALSE.

unitsize: the known sum of the size-weights of the resource.  The 
          argument must be in the form of a list containing an element
          for each   population Type in the subpop data frame, where
          NULL is a valid choice   for a population Type.  The list
          must be named using the column   names for population Types
          in subpop.  If a population Type doesn't   contain
          subpopulations, then each element of the list is either a  
          single value for an unstratified sample or a vector
          containing a value   for each stratum for a stratified
          sample, where elements of the vector are named using the
          stratum codes.  If a population Type contains 
          subpopulations, then each element of the list is a list
          containing an  element for each subpopulation, where the list
          is named using the  subpopulation names.  The element for
          each subpopulation will be  either a single value for an
          unstratified sample or a named vector of  values for a
          stratified sample.  The default is NULL.

 vartype: the choice of variance estimator, where "Local" = local mean
          estimator and "SRS" = SRS estimator.  The default is "Local".

    conf: the confidence level.  The default is 95%.

  pctval: the set of values at which percentiles are estimated.  The
          default set is: {5, 10, 25, 50, 75, 90, 95}.

psurvey.obj: A list of class psurvey.analysis that was produced by the
          function psurvey.analysis.  Depending on input to that
          function, some elements of the list may be NULL.  The default
          is NULL.

_D_e_t_a_i_l_s:

     CDF estimates are calculated for all unique values of a response
     variable.

_V_a_l_u_e:

     Value is a list containing either two or four data frames of
     population estimates for all combinations of population Types,
     subpopulations within Types, and response variables.  The data
     frames containing deconvoluted CDF estimates and deconvoluted
     percentile estimates are only included in the output list when an
     input value for measurement error variance is provided to the
     function.  CDF estimates are calculated for both proportion and
     size of the population. Standard error estimates and confidence
     interval estimates also  are calculated.  The four data frames
     are:

        *  'CDF' - a data frame containing the CDF estimates

        *  'Pct' - a data frame containing the percentile estimates
           plus population mean, standard deviation, and variance
           estimates

        *  'CDF.D' - a data frame containing the deconvoluted CDF
           estimates

        *  'Pct.D' - a data frame containing the deconvoluted
           percentile estimates

_A_u_t_h_o_r(_s):

     Tony Olsen Olsen.Tony@epa.gov
      Tom Kincaid Kincaid.Tom@epa.gov

_R_e_f_e_r_e_n_c_e_s:

     Diaz-Ramos, S., D.L. Stevens, Jr., and A.R. Olsen. (1996).  _EMAP
     Statistical Methods Manual._ EPA/620/R-96/XXX.  Corvallis, OR:
     U.S. Environmental Protection Agency, Office of Research and
     Development, National Health Effects and Environmental Research
     Laboratory, Western Ecology Division.

_S_e_e _A_l_s_o:

     'cdf.est, total.est'

_E_x_a_m_p_l_e_s:

     # Continuous variable example
     mysiteID <- paste("Site", 1:100, sep="")
     mysites <- data.frame(siteID=mysiteID, Active=rep(TRUE, 100))
     mysubpop <- data.frame(siteID=mysiteID, All.Sites=rep("All Sites",100),
        Resource.Class=rep(c("Good","Poor"), c(55,45)))
     mydesign <- data.frame(siteID=mysiteID, wgt=runif(100, 10, 100),
        xcoord=runif(100), ycoord=runif(100), stratum=rep(c("Stratum1",
        "Stratum2"), 50))
     ContVar <- rnorm(100, 10, 1)
     mydata.cont <- data.frame(siteID=mysiteID, ContVar=ContVar)
     mypopsize <- list(All.Sites=c(Stratum1=3500, Stratum2=2000),
        Resource.Class=list(Good=c(Stratum1=2500, Stratum2=1500),
        Poor=c(Stratum1=1000, Stratum2=500)))
     cont.analysis(sites=mysites, subpop=mysubpop, design=mydesign,
        data.cont=mydata.cont, popsize=mypopsize)

     # Include deconvolution estimates
     mydata.cont <- data.frame(siteID=mysiteID, ContVar=ContVar,
        ContVar.1=ContVar + rnorm(100, 0, sqrt(0.25)),
        ContVar.2=ContVar + rnorm(100, 0, sqrt(0.50)))
     mysigma <- c(NA, 0.25, 0.50)
     names(mysigma) <- c("ContVar", "ContVar.1", "ContVar.2")
     cont.analysis(sites=mysites, subpop=mysubpop[,1:2], design=mydesign,
        data.cont=mydata.cont, sigma=mysigma, popsize=mypopsize[1])

