cdf.test              package:spsurvey              R Documentation

_C_u_m_u_l_a_t_i_v_e _D_i_s_t_r_i_b_u_t_i_o_n _F_u_n_c_t_i_o_n - _I_n_f_e_r_e_n_c_e

_D_e_s_c_r_i_p_t_i_o_n:

     This function calculates the Wald, Rao-Scott first order corrected
     (mean  eigenvalue corrected), and Rao-Scott second order corrected
     (Satterthwaite corrected) statistics for categorical data to test
     for differences between two cumulative distribution functions
     (CDFs).  The functions calculates both  standard versions of those
     three statistics, which are distributed as  Chi-squared random
     variables, plus modified version of the statistics, which  are
     distributed as F random variables.

_U_s_a_g_e:

     cdf.test(sample1, sample2, bounds, vartype="Local")

_A_r_g_u_m_e_n_t_s:

 sample1: the sample from the first population in the form of a list
          containing the following components:
           z = the response value for each site
           wgt = the final adjusted weight (inverse of the sample
          inclusion probability) for each site
           x = x-coordinate for location for each site, which may be
          NULL
           y = y-coordinate for location for each site, which may be
          NULL

 sample2: the sample from the second population in the form of a list
          containing the following components:
           z = the response value for each site
           wgt = the final adjusted weight (inverse of the sample
          inclusion probability) for each site
           x = x-coordinate for location for each site, which may be
          NULL
           y = y-coordinate for location for each site, which may be
          NULL

  bounds: upper bounds for calculating the classes for the CDF.

 vartype: the choice of variance estimator, where "Local" = local mean
          estimator and "SRS" = SRS estimator.  The default is "Local".

_D_e_t_a_i_l_s:

     The user supplies the set of upper bounds for defining the classes
     for the CDFs.  The Horvitz-Thompson ratio estimator, i.e., the
     ratio of two Horvitz-Thompson estimators, is used to calculate
     estimates of the class proportions for the CDFs.  Variance
     estimates for the test statistics are calculated using either the
     local mean variance estimator or the simple random sampling (SRS)
     variance estimator.  The choice of variance estimator is subject
     to user control.  The SRS variance estimator uses the independent
     random sample approximation to calculate joint inclusion
     probabilities.  The function checks for compatability of input
     values and removes missing values.

_V_a_l_u_e:

     Value is a data frame containing the test statistic, degrees of 
     freedom (two values labeled Degrees of Freedom_1 and Degrees of 
     Freedom_2), and p value for the Wald, mean eigenvalue, and
     Satterthwaite test procedures, which includes both Chi-squared
     distribution and F  distribution versions of  the procedures.  For
     the Chi-squared versions of  the test procedures, Degrees of
     Freedom_1 contains the relevant value  and Degrees of Freedom_2 is
     set to  missing (NA).  For the F-based  versions of the test
     procedures Degrees of  Freedom_1 contains the  numerator degrees
     of freedom and Degrees of  Freedom_2 contains the  denominator
     degrees of freedom.

_A_u_t_h_o_r(_s):

     Tom Kincaid Kincaid.Tom@epa.gov

_R_e_f_e_r_e_n_c_e_s:

     Kincaid, T.M. (2000). Testing for differences between cumulative
     distribution functions from complex environmental sampling
     surveys.  In _2000 Proceeding of the Section on Statistics and the
     Environment_, American Statistical Association, Alexandria, VA.

_E_x_a_m_p_l_e_s:

     resp <- rnorm(100, 10, 1)
     wgt <- runif(100, 40, 60)
     sample1 <- list(z=resp, wgt=wgt)
     sample2 <- list(z=resp+0.5, wgt=wgt)
     bounds <- sort(c(sample1$z, sample2$z))[floor(seq(200/3, 200, length=3))]
     cdf.test(sample1, sample2, bounds, vartype="SRS")

     xcoord <- runif(100)
     ycoord <- runif(100)
     sample1 <- list(z=resp, wgt=wgt, x=xcoord, y=ycoord)
     sample2 <- list(z=1.05*resp, wgt=wgt, x=xcoord, y=ycoord)
     cdf.test(sample1, sample2, bounds)

